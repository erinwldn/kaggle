# -*- coding: utf-8 -*-
"""Tinanic with Sklearn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oEQajYdcVU_eyB9L1lqt-XF5UXhbFG4x
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler, MinMaxScaler, OrdinalEncoder
from sklearn.compose import make_column_transformer

data_train = pd.read_csv('/content/drive/MyDrive/kaggle/input/train.csv')
data_test = pd.read_csv('/content/drive/MyDrive/kaggle/input/test.csv')

gender_labels = {'male':0,'female':1}
data_train['Sex'] = data_train['Sex'].replace({'male':0,'female':1})
data_test['Sex'] = data_test['Sex'].replace({'male':0,'female':1})

data_train = data_train.drop(['Name','Ticket','Cabin','Embarked'],axis =1)
data_test = data_test.drop(['Name','Ticket','Cabin','Embarked'],axis =1)

data_train['Age'] = data_train['Age'].fillna(data_train['Age'].mean())
data_test['Age'] = data_test['Age'].fillna(data_test['Age'].mean())
data_test['Fare'] = data_test['Fare'].fillna(data_test['Fare'].mean())

x_train = data_train.drop(['Survived'],axis =1)   #dropped unnecessary columns
y_train = data_train['Survived']

x_test = data_test

num_columns = list(x_test.columns)

ct = make_column_transformer(
    (MinMaxScaler(), num_columns),
    (StandardScaler(), num_columns),
    remainder='passthrough'
)

x_train = ct.fit_transform(x_train)
x_test = ct.transform(x_test)

from sklearn.linear_model import LogisticRegression

log_reg = LogisticRegression(solver='liblinear')
log_reg.fit(x_train, y_train)
log_reg.fit(x_train, y_train)
y_test = log_reg.predict(x_test)
y_test

ids = data_test['PassengerId'].tolist()

preds = list(y_test)

submission = {
    "PassengerID":[],
    "Survived":[]
}

from tqdm import tqdm

# preds = preds[:10]
# ids = ids[:10]
# First 10

for id,pred in zip(tqdm(ids),preds):
    submission['PassengerID'].append(id)
    submission['Survived'].append(pred)

submission = pd.DataFrame(submission)
submission.iloc[:10]

submission.to_csv("./Final.csv",index=False)